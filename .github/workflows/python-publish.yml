# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches:
      - main

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Version judgment
      run: |
        latest_version=$(curl -s https://pypi.org/pypi/uitestrunner-syberos/json | jq -r .info.version)
        echo "${latest_version}"
        setup_version=$(cat setup.py | grep version | cut -d "'" -f 2)
        echo "${setup_version}"
        [ ${latest_version} = ${setup_version} ] && exit 1 || exit 0
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

  doc:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sphinx==4.4.0
        pip install sphinx-press-theme==0.8.0
        pip install pillow==10.0.0
    - name: Update doc
      run: |
        setup_version=$(cat setup.py | grep version | cut -d "'" -f 2)
        cd docs/
        sphinx-build -M html -D release=${setup_version} -D copyright="2021-"$(date +%Y)", Jinzhe Wang" source/ build/
        git config --global user.email "jinzhe0094@gmail.com"
        git config --global user.name "jinzhe0094"
        git clone https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/jinzhe0094/uitestrunner-syberos-api-doc.git
        cp -rf build/* uitestrunner-syberos-api-doc/
        cd uitestrunner-syberos-api-doc/
        git add .
        git commit -m "${setup_version}"
        git push https://${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/jinzhe0094/uitestrunner-syberos-api-doc.git
        
